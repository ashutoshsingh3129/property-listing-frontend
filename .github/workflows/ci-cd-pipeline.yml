# .github/workflows/ci-cd-pipeline.yml

name: CI/CD Pipeline

# Run on push to main or pull requests
on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Run Linter
      run: npm run lint

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm run test

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Build Project
      run: npm run build

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build

    - name: Deploy to Staging
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        sshpass -p "${{ secrets.STAGING_PASSWORD }}" scp -r build/* ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_SERVER }}:${{ secrets.STAGING_PATH }}
